image: docker:stable

stages:
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:19.03.12-dind

before_script:
  - docker info
  - mkdir -p $HOME/.docker
  - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  - docker build --pull -t "$CI_REGISTRY_IMAGE" .
  - docker push "$CI_REGISTRY_IMAGE"
  
include:
  - template: Code-Quality.gitlab-ci.yml

  
code_quality:
  stage: build  
  artifacts:
    paths: [gl-code-quality-report.json]

build go-simp migrate service:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json  
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" go-simp
  script:
    - docker build -t $CI_REGISTRY_IMAGE-migrate ./service/migrate
    - docker push $CI_REGISTRY_IMAGE-migrate    

build go-simp fanart service:
  stage: build
  before_script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" go-simp  
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_TOKEN" $CI_REGISTRY  
    - docker build -t $CI_REGISTRY_IMAGE-fanart ./service/fanart    
    - docker push $CI_REGISTRY_IMAGE-fanart    

build go-simp livestream service:
  stage: build
  before_script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" go-simp  
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY  
    - docker build -t $CI_REGISTRY_IMAGE-livestream ./service/livestream
    - docker push $CI_REGISTRY_IMAGE-livestream        

build go-simp subscriber service:
  stage: build
  before_script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" go-simp  
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY  
    - docker build -t $CI_REGISTRY_IMAGE-subscriber ./service/subscriber
    - docker push $CI_REGISTRY_IMAGE-subscriber    

build go-simp utility service:
  stage: build
  before_script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" go-simp  
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY  
    - docker build -t $CI_REGISTRY_IMAGE-utility ./service/utility
    - docker push $CI_REGISTRY_IMAGE-utility    

build go-simp frontend service:
  stage: build
  before_script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" go-simp  
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY  
    - docker build -t $CI_REGISTRY_IMAGE-frontend ./service/frontend
    - docker push $CI_REGISTRY_IMAGE-frontend    

build go-simp guild service:
  stage: build
  before_script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" go-simp  
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY  
    - docker build -t $CI_REGISTRY_IMAGE-guild ./service/guild
    - docker push $CI_REGISTRY_IMAGE-guild    

build go-simp web service:
  stage: build
  before_script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" go-simp  
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY  
    - docker build -t $CI_REGISTRY_IMAGE-web ./service/web
    - docker push $CI_REGISTRY_IMAGE-web    

build go-simp rest-api service:
  stage: build
  before_script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" go-simp  
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY  
    - docker build -t $CI_REGISTRY_IMAGE-rest-api ./service/rest-api
    - docker push $CI_REGISTRY_IMAGE-rest-api       