version: "3.7"

services:
  build_multitor:
    build: service/multitor
    image: tor_go_brrrrrrr

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: 1sampai8
      MYSQL_DATABASE: Vtuber
      MYSQL_USER: vtuber
      MYSQL_PASSWORD: kano2525
    restart: on-failure
    command: mysqld --sql_mode=""
    networks:
      - go_simp-net    

  multi_tor:
    image: tor_go_brrrrrrr
    networks:
      - go_simp-net

  db_migrate:
    build: ./service/migrate
    depends_on:
      - mysql  
    command: ./start.sh
    restart: on-failure    
    networks:
      - go_simp-net
    volumes:
      - ./config.toml:/app/migrate/config.toml  

  fanart:
    build: ./pkg/backend/fanart/
    depends_on:
      - mysql
      - db_migrate
      - multi_tor
    command: ./start.sh
    restart: on-failure
    networks:
      - go_simp-net
    volumes:
      - ./config.toml:/app/fanart/config.toml  

  livestream:
    build: ./pkg/backend/livestream/
    depends_on:
      - mysql
      - db_migrate
      - multi_tor
    command: ./start.sh
    restart: on-failure
    networks:
      - go_simp-net
    volumes:
      - ./config.toml:/app/livestream/config.toml  

  subscriber:
    build: ./pkg/backend/subscriber/
    depends_on:
      - mysql
      - db_migrate
      - multi_tor
    command: ./start.sh
    restart: on-failure    
    networks:
      - go_simp-net
    volumes:
      - ./config.toml:/app/subscriber/config.toml        

  utility:
    build: ./pkg/backend/utility/
    depends_on:
      - mysql
      - db_migrate
      - multi_tor
    command: go run .
    restart: on-failure    
    networks:
      - go_simp-net
    volumes:
      - ./config.toml:/app/utility/config.toml           

  guild:
    build: ./pkg/guild/
    depends_on:
      - mysql
      - db_migrate
      - multi_tor
    command: go run .
    restart: on-failure
    networks:
      - go_simp-net
    volumes:
      - ./config.toml:/app/guild/config.toml           

  frontend:
    build: ./pkg/frontend
    depends_on:
      - mysql
      - db_migrate
      - multi_tor
    command: ./start.sh
    restart: on-failure
    networks:
      - go_simp-net
    volumes:
      - ./config.toml:/app/frontend/config.toml           

  yotube-scrap:
    build: service/yt-scrap
    image: yt-scrap
    env_file:
      - ./.env
    networks:
      - go_simp-net         

  traefik:
    image: traefik:2.3
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./traefik.yml:/traefik.yml
      - ./acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock

  static_page:
    image: nginx:latest
    volumes:
    - ./Img/:/usr/share/nginx/html
    networks:
      - go_simp-proxy
    labels:
      - traefik.http.routers.static-http.rule=Host(`<YOUR_DOMAIN>`)
      - traefik.http.routers.static-http.entrypoints=http
      - traefik.http.routers.static-http.middlewares=redirect
      - traefik.http.routers.static-https.rule=Host(`<YOUR_DOMAIN>`)
      - traefik.http.routers.static-https.entrypoints=https
      - traefik.http.routers.static-https.tls=true
      - traefik.http.routers.static-https.tls.certresolver=letsencrypt
      - traefik.http.services.static-service.loadbalancer.server.port=80
      - traefik.http.middlewares.redirect.redirectscheme.scheme=https

  go_simp_web:
    build: service/web
    env_file:
      - ./.env    
    depends_on:
    - rest_api
    restart: on-failure    
    networks:
      - go_simp-proxy
    labels:
      # Traefik configuration, Hostname needs to be changed
      - traefik.http.routers.go_simp_web-http.rule=Host(`<YOUR_DOMAIN>`)
      - traefik.http.routers.go_simp_web-http.entrypoints=http
      - traefik.http.routers.go_simp_web-http.middlewares=redirect
      - traefik.http.routers.go_simp_web-https.rule=Host(`<YOUR_DOMAIN>`)
      - traefik.http.routers.go_simp_web-https.entrypoints=https
      - traefik.http.routers.go_simp_web-https.tls=true
      - traefik.http.routers.go_simp_web-https.tls.certresolver=letsencrypt
      - traefik.http.services.go_simp_web.loadbalancer.server.port=8000
      - traefik.http.middlewares.redirect.redirectscheme.scheme=https

  rest_api:
    build: service/rest-api
    depends_on:
      - redis
    command: go run . 
    restart: on-failure
    networks:
      - go_simp-proxy
      - go_simp-net
    labels:
      # Traefik configuration, Hostname needs to be changed
      - traefik.http.routers.rest_api-http.rule=Host(`<YOUR_DOMAIN>`)
      - traefik.http.routers.rest_api-http.entrypoints=http
      - traefik.http.routers.rest_api-http.middlewares=redirect
      - traefik.http.routers.rest_api-https.rule=Host(`<YOUR_DOMAIN>`)
      - traefik.http.routers.rest_api-https.entrypoints=https
      - traefik.http.routers.rest_api-https.tls=true
      - traefik.http.routers.rest_api-https.tls.certresolver=letsencrypt
      - traefik.http.services.rest_api.loadbalancer.server.port=2525
      - traefik.http.middlewares.redirect.redirectscheme.scheme=https
    volumes:
      - ./config.toml:/app/api/config.toml           
      
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:  
      - redis_data:/bitnami/redis/data/
    networks:
      - go_simp-net

networks:
  go_simp-proxy:
    external: true
  go_simp-net:
    external: false

volumes:
  redis_data: