name: build & deploy go-simp modules

on:
  create:
    branches:
      - 'master'
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
       
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV        
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Start build docker image
        run: echo ${{ env.RELEASE_VERSION }}        

    ## Build main image
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: justhumanz/go-simp:${{ github.sha }}

      #### Fanart    
      
      - name: Build and push bilibili fanart
        uses: docker/build-push-action@v2
        with:
          context: ./service/fanart/bilibili/
          push: true
          tags: justhumanz/go-simp-bilibili-fanart:${{ env.RELEASE_VERSION }}
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }} 

      - name: Build and push twitter fanart
        uses: docker/build-push-action@v2
        with:
          context: ./service/fanart/twitter/
          push: true
          tags: justhumanz/go-simp-twitter-fanart:${{ env.RELEASE_VERSION }}
      
      - name: Build and push pixiv fanart
        uses: docker/build-push-action@v2
        with:
          context: ./service/fanart/pixiv/
          push: true
          tags: justhumanz/go-simp-pixiv-fanart:${{ env.RELEASE_VERSION }}
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}           


      ### Live
      
      - name: Build and push space bilibili livestream
        uses: docker/build-push-action@v2
        with:
          context: ./service/livestream/bilibili/space/
          push: true
          tags: justhumanz/go-simp-bilispace-livestream:${{ env.RELEASE_VERSION }}
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}           
      
      - name: Build and push live bilibili livestream 
        uses: docker/build-push-action@v2
        with:
          context: ./service/livestream/bilibili/live/
          push: true
          tags: justhumanz/go-simp-bililive-livestream:${{ env.RELEASE_VERSION }}
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}           

      
      - name: Build and push youtube checker livestream
        uses: docker/build-push-action@v2
        with:
          context: ./service/livestream/youtube/checker/
          push: true
          tags: justhumanz/go-simp-youtube-checker-livestream:${{ env.RELEASE_VERSION }}
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}           
      
      - name: Build and push youtube counter livestream
        uses: docker/build-push-action@v2
        with:
          context: ./service/livestream/youtube/counter/
          push: true
          tags: justhumanz/go-simp-youtube-counter-livestream:${{ env.RELEASE_VERSION }}
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}           
      
      - name: Build and push twitch livestream
        uses: docker/build-push-action@v2
        with:
          context: ./service/livestream/twitch/
          push: true
          tags: justhumanz/go-simp-twitch-livestream:${{ env.RELEASE_VERSION }}
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}           

      ### Subscriber
      
      - name: Build and push Subscriber
        uses: docker/build-push-action@v2
        with:
          context: ./service/subscriber/
          push: true
          tags: justhumanz/go-simp-subscriber:${{ env.RELEASE_VERSION }}
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}           

      ### REST API
      
      - name: Build and push rest api
        uses: docker/build-push-action@v2
        with:
          context: ./service/rest-api/
          push: true
          tags: justhumanz/go-simp-rest_api-v2:${{ env.RELEASE_VERSION }}
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}           

      ### Frontend
      
      - name: Build and push fe
        uses: docker/build-push-action@v2
        with:
          context: ./service/frontend/
          push: true
          tags: justhumanz/go-simp-frontend:${{ env.RELEASE_VERSION }}            
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}           

      ### Web admin api
      
      - name: Build and push web admin
        uses: docker/build-push-action@v2
        with:
          context: ./service/web-admin-api
          push: true
          tags: justhumanz/go-simp-web-admin-api:latest       

      ### Web admin vue
      
      - name: Build and push web admin
        uses: docker/build-push-action@v2
        with:
          context: ./service/web-admin-vue
          push: true
          tags: justhumanz/go-simp-web-admin-vue:latest                

      ### Go simp web
      
      - name: Build and push web admin
        uses: docker/build-push-action@v2
        with:
          context: ./service/new-web-vue
          push: true
          tags: justhumanz/go-simp-web-vue-v2:latest


  deploy:
    needs: build  
    environment:
      name: production    
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV   

      - 
        name: SSH and deploy to server
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          command: |
            export RELEASE_VERSION=${{ env.RELEASE_VERSION }}
            export TOPGG=${{ secrets.TOPGG }}
            export BOT_SECRET=${{ secrets.SECRET }}
            export BOT_CLIENTID=${{ secrets.CLIENTID }}
            export BOT=${{ secrets.BOT }}
            export DB_PASS=${{ secrets.DB_PASS }}
                        
            cd Go-Simp/swarm && git pull
            docker stack deploy -c live.yaml livestream --with-registry-auth
            docker stack deploy -c fanart.yaml fanart --with-registry-auth
            docker stack deploy -c utility.yaml utility --with-registry-auth