name: build & deploy go-simp website

on: 
  workflow_dispatch:
    inputs:
      versionTag:
        description: 'new version of this build'
        required: true  
        default: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    ## Build main image
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: justhumanz/go-simp:${{ github.sha }}

      ### REST API
      
      - name: Build and push rest api
        uses: docker/build-push-action@v2
        with:
          context: ./service/rest-api/
          push: true
          tags: justhumanz/go-simp-rest_api-v2:${{ github.event.inputs.versionTag }}       
          build-args: |
            BASE_IMAGE=justhumanz/go-simp:${{ github.sha }}   

      ### Web admin api
      
      - name: Build and push web admin
        uses: docker/build-push-action@v2
        with:
          context: ./service/web-admin-api
          push: true
          tags: justhumanz/go-simp-web-admin-api:${{ github.event.inputs.versionTag }}       

      ### Web admin vue
      
      - name: Build and push web admin
        uses: docker/build-push-action@v2
        with:
          context: ./service/web-admin-vue
          push: true
          tags: justhumanz/go-simp-web-admin-vue:${{ github.event.inputs.versionTag }}                

      ### Go simp web
      
      - name: Build and push web admin
        uses: docker/build-push-action@v2
        with:
          context: ./service/new-web-vue
          push: true
          tags: justhumanz/go-simp-web-vue-v2:${{ github.event.inputs.versionTag }}         


  deploy:
    needs: build
    environment:
      name: production    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: SSH and deploy to server
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          command: |
            export RELEASE_VERSION=${{ env.RELEASE_VERSION }}
            export TOPGG=${{ secrets.TOPGG }}
            export BOT_SECRET=${{ secrets.SECRET }}
            export BOT_CLIENTID=${{ secrets.CLIENTID }}
            export BOT=${{ secrets.BOT }}
            export DB_PASS=${{ secrets.DB_PASS }}
            cd Go-Simp/swarm
            sudo git pull
            docker stack deploy -c web.yaml web --with-registry-auth